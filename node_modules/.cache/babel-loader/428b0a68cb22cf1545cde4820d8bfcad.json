{"ast":null,"code":"import _classCallCheck from \"C:/Users/ESRAA/loginn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/ESRAA/loginn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/ESRAA/loginn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/ESRAA/loginn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\ESRAA\\\\loginn\\\\src\\\\pages\\\\CSSNavPage.js\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBModalFooter, MDBIcon, MDBCardHeader, MDBBtn, MDBInput, FormPage } from \"mdbreact\";\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar SignupSchema = Yup.object().shape({\n  firstName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n  lastName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n  email: Yup.string().email('Invalid email').required('Required')\n});\n\nvar CSSNavPage = /*#__PURE__*/function (_Component) {\n  _inherits(CSSNavPage, _Component);\n\n  var _super = _createSuper(CSSNavPage);\n\n  function CSSNavPage(props) {\n    var _this;\n\n    _classCallCheck(this, CSSNavPage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      logo: '',\n      name: '',\n      id: '',\n      welcome_message: ''\n    };\n    return _this;\n  }\n\n  _createClass(CSSNavPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // get all entities - GET\n      fetch(\"192.168.1.107:8000/schools/teq\", {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-host\": \"zacampus.net/sc/url\",\n          \"x-rapidapi-key\": \"secret\"\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        _this2.setState({\n          friends: response\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"email\",\n            name: \"email\",\n            label: \"Email\",\n            value: formik.values.email,\n            onChange: formik.handleChange,\n            error: formik.touched.email && Boolean(formik.errors.email),\n            helperText: formik.touched.email && formik.errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"password\",\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            value: formik.values.password,\n            onChange: formik.handleChange,\n            error: formik.touched.password && Boolean(formik.errors.password),\n            helperText: formik.touched.password && formik.errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            fullWidth: true,\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this);\n    }\n  }]);\n\n  return CSSNavPage;\n}(Component);\n\n;\nexport default CSSNavPage;\n/*\r\n    <Form>\r\n          <Field name=\"firstName\" />\r\n          {errors.firstName && touched.firstName ? (\r\n            <div>{errors.firstName}</div>\r\n          ) : null}\r\n          <Field name=\"lastName\" />\r\n          {errors.lastName && touched.lastName ? (\r\n            <div>{errors.lastName}</div>\r\n          ) : null}\r\n          <Field name=\"email\" type=\"email\" />\r\n          {errors.email && touched.email ? <div>{errors.email}</div> : null}\r\n          <button type=\"submit\">Submit</button>\r\n        </Form>\r\n\r\n*/","map":{"version":3,"sources":["C:/Users/ESRAA/loginn/src/pages/CSSNavPage.js"],"names":["React","Component","MDBContainer","MDBRow","MDBCol","MDBCard","MDBCardBody","MDBModalFooter","MDBIcon","MDBCardHeader","MDBBtn","MDBInput","FormPage","Formik","Form","Field","Yup","SignupSchema","object","shape","firstName","string","min","max","required","lastName","email","CSSNavPage","props","state","logo","name","id","welcome_message","fetch","then","response","json","setState","friends","catch","err","console","log","formik","handleSubmit","values","handleChange","touched","Boolean","errors","password"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport {\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBModalFooter,\r\n  MDBIcon,\r\n  MDBCardHeader,\r\n  MDBBtn,\r\n  MDBInput, FormPage\r\n} from \"mdbreact\";\r\nimport { Formik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  firstName: Yup.string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n  lastName: Yup.string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n  email: Yup.string().email('Invalid email').required('Required'),\r\n});\r\n\r\nclass CSSNavPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    \r\n      logo:'',\r\n      name: '',\r\n      id: '',\r\n      welcome_message:''\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {\r\n     // get all entities - GET\r\n     fetch(\"192.168.1.107:8000/schools/teq\", {\r\n      \"method\": \"GET\",\r\n      \"headers\": {\r\n        \"x-rapidapi-host\": \"zacampus.net/sc/url\",\r\n        \"x-rapidapi-key\": \"secret\"\r\n      }\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      this.setState({\r\n        friends: response\r\n      })\r\n    })\r\n    .catch(err => { console.log(err); \r\n    });\r\n   }\r\n  render() {\r\n   \r\n\r\n  return (\r\n  \r\n    <div>\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <TextField\r\n        fullWidth\r\n        id=\"email\"\r\n        name=\"email\"\r\n        label=\"Email\"\r\n        value={formik.values.email}\r\n        onChange={formik.handleChange}\r\n        error={formik.touched.email && Boolean(formik.errors.email)}\r\n        helperText={formik.touched.email && formik.errors.email}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        id=\"password\"\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        type=\"password\"\r\n        value={formik.values.password}\r\n        onChange={formik.handleChange}\r\n        error={formik.touched.password && Boolean(formik.errors.password)}\r\n        helperText={formik.touched.password && formik.errors.password}\r\n      />\r\n      <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </form>\r\n  </div>\r\n  );\r\n}};\r\n\r\nexport default  CSSNavPage  ;\r\n\r\n\r\n\r\n/*\r\n    <Form>\r\n          <Field name=\"firstName\" />\r\n          {errors.firstName && touched.firstName ? (\r\n            <div>{errors.firstName}</div>\r\n          ) : null}\r\n          <Field name=\"lastName\" />\r\n          {errors.lastName && touched.lastName ? (\r\n            <div>{errors.lastName}</div>\r\n          ) : null}\r\n          <Field name=\"email\" type=\"email\" />\r\n          {errors.email && touched.email ? <div>{errors.email}</div> : null}\r\n          <button type=\"submit\">Submit</button>\r\n        </Form>\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}