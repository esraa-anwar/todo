{"ast":null,"code":"import _classCallCheck from \"C:/Users/ESRAA/loginn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/ESRAA/loginn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/ESRAA/loginn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/ESRAA/loginn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\ESRAA\\\\loginn\\\\src\\\\pages\\\\HomePage.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar HomePage = /*#__PURE__*/function (_React$Component) {\n  _inherits(HomePage, _React$Component);\n\n  var _super = _createSuper(HomePage);\n\n  function HomePage(props) {\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      items: {}\n    };\n    return _this;\n  }\n\n  _createClass(HomePage, [{\n    key: \"fetchPosts\",\n    value: function fetchPosts() {\n      var _this2 = this;\n\n      // The API where we're fetching data from\n      fetch(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/3/posts.json\") // We get a response and receive the data in JSON format...\n      .then(function (response) {\n        return response.json();\n      }) // ...then we update the state of our application\n      .then(function (data) {\n        return _this2.setState({\n          posts: data,\n          isLoading: false\n        });\n      }) // If we catch errors instead of a response, let's update the app\n      .catch(function (error) {\n        return _this2.setState({\n          error: error,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      // get all entities - GET\n      fetch(\"http://192.168.1.107:8000/schools/ninj\", {\n        \"method\": \"GET\"\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        _this3.setState({\n          friends: response\n        });\n\n        console.log(_this3.state.friends);\n      }).catch(function (err) {\n        console.log(err);\n      });\n      console.log(this.state.items);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n      if (error) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Error: \", error.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 14\n        }, this);\n      } else if (!isLoaded) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 14\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: items.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this);\n      }\n    }\n  }]);\n\n  return HomePage;\n}(React.Component);\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/ESRAA/loginn/src/pages/HomePage.js"],"names":["React","Component","HomePage","props","state","error","isLoaded","items","fetch","then","response","json","data","setState","posts","isLoading","catch","friends","console","log","err","message","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;IACMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAFiB;AAOlB;;;;WACD,sBAAa;AAAA;;AACX;AACAC,MAAAA,KAAK,6DAAL,CACE;AADF,OAEGC,IAFH,CAEQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAFhB,EAGE;AAHF,OAIGF,IAJH,CAKI,UAAAG,IAAI;AAAA,eACF,MAAI,CAACC,QAAL,CAAc;AACZC,UAAAA,KAAK,EAAEF,IADK;AAEZG,UAAAA,SAAS,EAAE;AAFC,SAAd,CADE;AAAA,OALR,EAWE;AAXF,OAYGC,KAZH,CAYS,UAAAX,KAAK;AAAA,eAAI,MAAI,CAACQ,QAAL,CAAc;AAAER,UAAAA,KAAK,EAALA,KAAF;AAASU,UAAAA,SAAS,EAAE;AAApB,SAAd,CAAJ;AAAA,OAZd;AAaD;;;WACD,6BAAoB;AAAA;;AAClB;AACDP,MAAAA,KAAK,CAAC,wCAAD,EAA2C;AAC7C,kBAAU;AADmC,OAA3C,CAAL,CAIEC,IAJF,CAIO,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAJf,EAKCF,IALD,CAKM,UAAAC,QAAQ,EAAI;AACf,QAAA,MAAI,CAACG,QAAL,CAAc;AACbI,UAAAA,OAAO,EAAEP;AADI,SAAd;;AAGAQ,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACf,KAAL,CAAWa,OAAvB;AACF,OAVD,EAYED,KAZF,CAYQ,UAAAI,GAAG,EAAI;AAAEF,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACf,OAbF;AAcCF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWG,KAAvB;AACD;;;WAED,kBAAS;AAAA,wBAC4B,KAAKH,KADjC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UACkBC,KADlB,eACkBA,KADlB;;AAEP,UAAIF,KAAJ,EAAW;AACT,4BAAO;AAAA,gCAAaA,KAAK,CAACgB,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEO,IAAI,CAACf,QAAL,EAAe;AACpB,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFM,MAEA;AACL,4BAGM;AAAA,oBACGC,KAAK,CAACe;AADT;AAAA;AAAA;AAAA;AAAA,gBAHN;AASD;AACF;;;;EA7DoBtB,KAAK,CAACC,S;;AA+D7B,eAAeC,QAAf","sourcesContent":["import React, { Component } from 'react'\r\nclass HomePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: {}\r\n    };\r\n  }\r\n  fetchPosts() {\r\n    // The API where we're fetching data from\r\n    fetch(`https://s3-us-west-2.amazonaws.com/s.cdpn.io/3/posts.json`)\r\n      // We get a response and receive the data in JSON format...\r\n      .then(response => response.json())\r\n      // ...then we update the state of our application\r\n      .then(\r\n        data =>\r\n          this.setState({\r\n            posts: data,\r\n            isLoading: false,\r\n          })\r\n      )\r\n      // If we catch errors instead of a response, let's update the app\r\n      .catch(error => this.setState({ error, isLoading: false }));\r\n  }\r\n  componentDidMount() {\r\n    // get all entities - GET\r\n   fetch(\"http://192.168.1.107:8000/schools/ninj\", {\r\n      \"method\": \"GET\",\r\n   \r\n    })\r\n    .then(response => response.json())\r\n   .then(response => {\r\n      this.setState({\r\n       friends: response\r\n      })\r\n      console.log(this.state.friends)\r\n   })\r\n   \r\n    .catch(err => { console.log(err); \r\n    });\r\n    console.log(this.state.items)\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n   \r\n          \r\n            <p >\r\n              {items.name} \r\n            </p>\r\n          \r\n     \r\n      );\r\n    }\r\n  }\r\n}\r\nexport default HomePage"]},"metadata":{},"sourceType":"module"}