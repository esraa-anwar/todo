{"ast":null,"code":"import _classCallCheck from \"C:/Users/ESRAA/loginn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/ESRAA/loginn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/ESRAA/loginn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/ESRAA/loginn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\ESRAA\\\\loginn\\\\src\\\\pages\\\\HomePage.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar HomePage = /*#__PURE__*/function (_React$Component) {\n  _inherits(HomePage, _React$Component);\n\n  var _super = _createSuper(HomePage);\n\n  function HomePage(props) {\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      items: {}\n    };\n    return _this;\n  }\n\n  _createClass(HomePage, [{\n    key: \"fetchPosts\",\n    value: function fetchPosts() {\n      var _this2 = this;\n\n      // The API where we're fetching data from\n      fetch(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/3/posts.json\") // We get a response and receive the data in JSON format...\n      .then(function (response) {\n        return response.json();\n      }) // ...then we update the state of our application\n      .then(function (data) {\n        return _this2.setState({\n          posts: data,\n          isLoading: false\n        });\n      }) // If we catch errors instead of a response, let's update the app\n      .catch(function (error) {\n        return _this2.setState({\n          error: error,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      // get all entities - GET\n      fetch(\"http://192.168.1.107:8000/schools/ninj\", {\n        \"method\": \"GET\",\n        \"mode\": \"no-cors\"\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        _this3.setState({\n          items: response\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded;\n\n      if (error) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Error: \", error.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 14\n        }, this);\n      } else if (!isLoaded) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 14\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: JSON.stringify(this.state.items, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this);\n      }\n    }\n  }]);\n\n  return HomePage;\n}(React.Component);\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/ESRAA/loginn/src/pages/HomePage.js"],"names":["React","Component","HomePage","props","state","error","isLoaded","items","fetch","then","response","json","data","setState","posts","isLoading","catch","err","console","log","message","JSON","stringify"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;IACMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAFiB;AAOlB;;;;WACD,sBAAa;AAAA;;AACX;AACAC,MAAAA,KAAK,6DAAL,CACE;AADF,OAEGC,IAFH,CAEQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAFhB,EAGE;AAHF,OAIGF,IAJH,CAKI,UAAAG,IAAI;AAAA,eACF,MAAI,CAACC,QAAL,CAAc;AACZC,UAAAA,KAAK,EAAEF,IADK;AAEZG,UAAAA,SAAS,EAAE;AAFC,SAAd,CADE;AAAA,OALR,EAWE;AAXF,OAYGC,KAZH,CAYS,UAAAX,KAAK;AAAA,eAAI,MAAI,CAACQ,QAAL,CAAc;AAAER,UAAAA,KAAK,EAALA,KAAF;AAASU,UAAAA,SAAS,EAAE;AAApB,SAAd,CAAJ;AAAA,OAZd;AAaD;;;WACD,6BAAoB;AAAA;;AAClB;AAEDP,MAAAA,KAAK,CAAC,wCAAD,EAA2C;AAC7C,kBAAU,KADmC;AAE7C,gBAAQ;AAFqC,OAA3C,CAAL,CAMEC,IANF,CAMO,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OANf,EAOCF,IAPD,CAOM,UAAAC,QAAQ,EAAI;AACf,QAAA,MAAI,CAACG,QAAL,CAAc;AACbN,UAAAA,KAAK,EAAEG;AADM,SAAd;AAGF,OAXD,EAaEM,KAbF,CAaQ,UAAAC,GAAG,EAAI;AAAEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACf,OAdF;AAgBA;;;WAED,kBAAS;AAAA,wBACoB,KAAKb,KADzB;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;;AAEP,UAAID,KAAJ,EAAW;AACT,4BAAO;AAAA,gCAAaA,KAAK,CAACe,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEO,IAAI,CAACd,QAAL,EAAe;AACpB,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFM,MAEA;AACL,4BAGE;AAAA,oBAAMe,IAAI,CAACC,SAAL,CAAe,KAAKlB,KAAL,CAAWG,KAA1B,EAAiC,IAAjC,EAAuC,CAAvC;AAAN;AAAA;AAAA;AAAA;AAAA,gBAHF;AAKD;AACF;;;;EA3DoBP,KAAK,CAACC,S;;AA6D7B,eAAeC,QAAf","sourcesContent":["import React, { Component } from 'react'\r\nclass HomePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: {}\r\n    };\r\n  }\r\n  fetchPosts() {\r\n    // The API where we're fetching data from\r\n    fetch(`https://s3-us-west-2.amazonaws.com/s.cdpn.io/3/posts.json`)\r\n      // We get a response and receive the data in JSON format...\r\n      .then(response => response.json())\r\n      // ...then we update the state of our application\r\n      .then(\r\n        data =>\r\n          this.setState({\r\n            posts: data,\r\n            isLoading: false,\r\n          })\r\n      )\r\n      // If we catch errors instead of a response, let's update the app\r\n      .catch(error => this.setState({ error, isLoading: false }));\r\n  }\r\n  componentDidMount() {\r\n    // get all entities - GET\r\n   \r\n   fetch(\"http://192.168.1.107:8000/schools/ninj\", {\r\n      \"method\": \"GET\",\r\n      \"mode\": \"no-cors\"\r\n   \r\n    })\r\n    \r\n    .then(response => response.json())\r\n   .then(response => {\r\n      this.setState({\r\n       items: response\r\n      })\r\n   })\r\n   \r\n    .catch(err => { console.log(err)\r\n    });\r\n   \r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded} = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n   \r\n          \r\n        <div>{JSON.stringify(this.state.items, null, 2)}</div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default HomePage"]},"metadata":{},"sourceType":"module"}