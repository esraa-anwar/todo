{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ESRAA/loginn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/ESRAA/loginn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ESRAA\\\\loginn\\\\src\\\\pages\\\\ListGroupPage.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _React = React,\n    useState = _React.useState;\n\nvar AddTaskForm = function AddTaskForm(_ref) {\n  _s();\n\n  var addTask = _ref.addTask;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    value && addTask(value);\n    setValue(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: value,\n      placeholder: \"Enter a title for this task\\u2026\",\n      onChange: function onChange(e) {\n        return setValue(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fas fa-plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 29\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AddTaskForm, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n\n_c = AddTaskForm;\n\nvar ToDoList = function ToDoList() {\n  _s2();\n\n  var _useState3 = useState([{\n    text: \"Like\",\n    isCompleted: false\n  }, {\n    text: \"Comment\",\n    isCompleted: false\n  }, {\n    text: \"Subscribe\",\n    isCompleted: false\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tasks = _useState4[0],\n      setTasks = _useState4[1];\n\n  var addTask = function addTask(text) {\n    return setTasks([].concat(_toConsumableArray(tasks), [{\n      text: text\n    }]));\n  };\n\n  var toggleTask = function toggleTask(index) {\n    var newTasks = _toConsumableArray(tasks);\n\n    newTasks[index].isCompleted = !newTasks[index].isCompleted;\n    setTasks(newTasks);\n  };\n\n  var removeTask = function removeTask(index) {\n    var newTasks = _toConsumableArray(tasks);\n\n    newTasks.splice(index, 1);\n    setTasks(newTasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [tasks.map(function (task, index) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: function onClick() {\n            return toggleTask(index);\n          },\n          className: task.isCompleted ? \"todo-text todo-completed\" : \"todo-text\",\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return removeTask(index);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-trash-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 53\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(ToDoList, \"+miXQKXosmzBD9DEbGVYRGb+GXA=\");\n\n_c2 = ToDoList;\nReactDOM.render( /*#__PURE__*/_jsxDEV(ToDoList, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 67,\n  columnNumber: 17\n}, this), document.getElementById('app'));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddTaskForm\");\n$RefreshReg$(_c2, \"ToDoList\");","map":{"version":3,"sources":["C:/Users/ESRAA/loginn/src/pages/ListGroupPage.js"],"names":["React","useState","AddTaskForm","addTask","value","setValue","handleSubmit","e","preventDefault","target","ToDoList","text","isCompleted","tasks","setTasks","toggleTask","index","newTasks","removeTask","splice","map","task","ReactDOM","render","document","getElementById"],"mappings":"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","sourcesContent":["const { useState } = React;\r\n\r\nconst AddTaskForm = ({ addTask }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    value && addTask(value)\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        placeholder=\"Enter a title for this taskâ€¦\"\r\n        onChange={e => setValue(e.target.value)}\r\n      />\r\n      <button type=\"submit\"><i class=\"fas fa-plus\"></i></button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst ToDoList = () => {\r\n\r\n  const [tasks, setTasks] = useState([{\r\n      text: \"Like\",\r\n      isCompleted: false\r\n    },{\r\n      text: \"Comment\",\r\n      isCompleted: false\r\n    },{\r\n      text: \"Subscribe\",\r\n      isCompleted: false\r\n    }]);\r\n\r\n  const addTask = text => setTasks([...tasks, { text }]);\r\n\r\n  const toggleTask = index => {\r\n    const newTasks = [...tasks];\r\n    newTasks[index].isCompleted = !newTasks[index].isCompleted;\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const removeTask = index => {\r\n    const newTasks = [...tasks];\r\n    newTasks.splice(index, 1);\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      {tasks.map((task, index) => (\r\n        <div className=\"todo\">\r\n          <span onClick={() => toggleTask(index)} className={task.isCompleted ? \"todo-text todo-completed\" : \"todo-text\"}>\r\n            {task.text}\r\n          </span>\r\n          <button onClick={() => removeTask(index)}><i class=\"fas fa-trash-alt\"></i></button>\r\n        </div>\r\n      ))}\r\n      <AddTaskForm addTask={addTask} />\r\n    </div>\r\n  );\r\n}\r\n\r\nReactDOM.render(<ToDoList />, document.getElementById('app'));"]},"metadata":{},"sourceType":"module"}