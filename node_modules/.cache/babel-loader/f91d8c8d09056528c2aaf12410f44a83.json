{"ast":null,"code":"import _slicedToArray from \"C:/Users/ESRAA/loginn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ESRAA\\\\loginn\\\\src\\\\pages\\\\AdvancedNavPage.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AdvancedNavPage() {\n  var _this = this;\n\n  _s();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoaded = _useState4[0],\n      setIsLoaded = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      items = _useState6[0],\n      setItems = _useState6[1]; // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n\n  useEffect(function () {\n    fetch(\"https://api.example.com/items\").then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    function (error) {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.name, \" \", item.price]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_c = AdvancedNavPage;\n\n_s(AdvancedNavPage, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n\nexport default function MyComponent() {\n  _s2();\n\n  var _this2 = this;\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isLoaded = _useState10[0],\n      setIsLoaded = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      items = _useState12[0],\n      setItems = _useState12[1]; // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n\n  useEffect(function () {\n    fetch(\"https://api.example.com/items\").then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    function (error) {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.name, \" \", item.price]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, _this2);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s2(MyComponent, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n\n_c2 = MyComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AdvancedNavPage\");\n$RefreshReg$(_c2, \"MyComponent\");","map":{"version":3,"sources":["C:/Users/ESRAA/loginn/src/pages/AdvancedNavPage.js"],"names":["AdvancedNavPage","useState","error","setError","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","then","res","json","result","message","map","item","name","price","id","MyComponent"],"mappings":"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","sourcesContent":["function AdvancedNavPage() {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [items, setItems] = useState([]);\r\n\r\n  // Note: the empty deps array [] means\r\n  // this useEffect will run once\r\n  // similar to componentDidMount()\r\n  useEffect(() => {\r\n    fetch(\"https://api.example.com/items\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          setItems(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [])\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (\r\n      <ul>\r\n        {items.map(item => (\r\n          <li key={item.id}>\r\n            {item.name} {item.price}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nexport default function MyComponent() {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [items, setItems] = useState([]);\r\n\r\n  // Note: the empty deps array [] means\r\n  // this useEffect will run once\r\n  // similar to componentDidMount()\r\n  useEffect(() => {\r\n    fetch(\"https://api.example.com/items\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          setItems(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [])\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (\r\n      <ul>\r\n        {items.map(item => (\r\n          <li key={item.id}>\r\n            {item.name} {item.price}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}