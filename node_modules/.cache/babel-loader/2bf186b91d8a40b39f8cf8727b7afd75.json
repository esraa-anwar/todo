{"ast":null,"code":"import _slicedToArray from \"C:/Users/ESRAA/loginn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ESRAA\\\\loginn\\\\src\\\\pages\\\\AdvancedNavPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AdvancedNavPage() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoaded = _useState4[0],\n      setIsLoaded = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      items = _useState6[0],\n      setItems = _useState6[1]; // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n\n  useEffect(function () {\n    fetch(\"http://134.122.100.243:8000/schools/ninj\", {\n      \"method\": \"GEt\",\n      \"mode\": \"no-cors\",\n      \"headers\": {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    function (error) {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(AdvancedNavPage, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n\n_c = AdvancedNavPage;\nexport default AdvancedNavPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdvancedNavPage\");","map":{"version":3,"sources":["C:/Users/ESRAA/loginn/src/pages/AdvancedNavPage.js"],"names":["React","useState","useEffect","AdvancedNavPage","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","then","res","json","result","message","map","item","name","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;;;AAEA,SAASC,eAAT,GAA2B;AAAA;;AAAA;;AAAA,kBACCF,QAAQ,CAAC,IAAD,CADT;AAAA;AAAA,MAClBG,KADkB;AAAA,MACXC,QADW;;AAAA,mBAEOJ,QAAQ,CAAC,KAAD,CAFf;AAAA;AAAA,MAElBK,QAFkB;AAAA,MAERC,WAFQ;;AAAA,mBAGCN,QAAQ,CAAC,EAAD,CAHT;AAAA;AAAA,MAGlBO,KAHkB;AAAA,MAGXC,QAHW,kBAKzB;AACA;AACA;;;AACAP,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,KAAK,CAAC,0CAAD,EAA6C;AAChD,gBAAU,KADsC;AAEhD,cAAQ,SAFwC;AAGhD,iBAAW;AAET,wBAAgB,kBAFP;AAGT,kBAAU;AAHD;AAHqC,KAA7C,CAAL,CAQGC,IARH,CAQQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KARX,EASGF,IATH,CAUI,UAACG,MAAD,EAAY;AACVP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACK,MAAD,CAAR;AACD,KAbL,EAcI;AACA;AACA;AACA,cAACV,KAAD,EAAW;AACTG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KApBL;AAsBD,GAvBQ,EAuBN,EAvBM,CAAT;;AAyBA,MAAIA,KAAJ,EAAW;AACT,wBAAO;AAAA,4BAAaA,KAAK,CAACW,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAI,CAACT,QAAL,EAAe;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL,wBACE;AAAA,gBACGE,KAAK,CAACQ,GAAN,CAAU,UAAAC,IAAI;AAAA,4BACb;AAAA,oBACGA,IAAI,CAACC;AADR,WAASD,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,iBADa;AAAA,OAAd;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AASD;AACF;;GAhDQhB,e;;KAAAA,e;AAiDT,eAAeA,eAAf","sourcesContent":["import React, {useState ,useEffect } from 'react'\r\n\r\nfunction AdvancedNavPage() {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [items, setItems] = useState([]);\r\n\r\n  // Note: the empty deps array [] means\r\n  // this useEffect will run once\r\n  // similar to componentDidMount()\r\n  useEffect(() => {\r\n    fetch(\"http://134.122.100.243:8000/schools/ninj\", {\r\n      \"method\": \"GEt\",\r\n      \"mode\": \"no-cors\",\r\n      \"headers\": {\r\n      \r\n        \"content-type\": \"application/json\",\r\n        \"accept\": \"application/json\"\r\n      },})\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          setItems(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [])\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (\r\n      <ul>\r\n        {items.map(item => (\r\n          <li key={item.id}>\r\n            {item.name} \r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nexport default AdvancedNavPage"]},"metadata":{},"sourceType":"module"}